<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IO.Swagger</name>
    </assembly>
    <members>
        <member name="T:IO.Swagger.Attributes.ValidateModelStateAttribute">
            <summary>
            Model state validation attribute
            </summary>
        </member>
        <member name="M:IO.Swagger.Attributes.ValidateModelStateAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Called before the action method is invoked
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:IO.Swagger.Controllers.AuthenticationApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.AuthenticationApiController.AuthLoginPost(IO.Swagger.Models.User)">
            <summary>
            User login
            </summary>
            <param name="body">User credentials</param>
            <response code="200">JWT token</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal Server Error</response>
        </member>
        <member name="M:IO.Swagger.Controllers.AuthenticationApiController.AuthLogoutDelete(System.String)">
            <summary>
            Logout (delete user)
            </summary>
            <param name="email"></param>
            <response code="204">User deleted successfully</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal Server Error</response>
        </member>
        <member name="M:IO.Swagger.Controllers.AuthenticationApiController.AuthRegisterPost(IO.Swagger.Models.User)">
            <summary>
            Register a new user
            </summary>
            <param name="body">New user data</param>
            <response code="201">User created successfully</response>
            <response code="400">Bad Request</response>
            <response code="500">Internal Server Error</response>
        </member>
        <member name="T:IO.Swagger.Controllers.CalculatorApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:IO.Swagger.Controllers.CalculatorApiController.CalculatePost(IO.Swagger.Models.CalculationRequest)">
            <summary>
            Perform a calculation
            </summary>
            <param name="body">Calculation parameters</param>
            <response code="200">Calculation result</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized</response>
            <response code="500">Internal Server Error</response>
        </member>
        <member name="T:IO.Swagger.Filters.BasePathFilter">
            <summary>
            BasePath Document Filter sets BasePath property of Swagger and removes it from the individual URL paths
            </summary>
        </member>
        <member name="M:IO.Swagger.Filters.BasePathFilter.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="basePath">BasePath to remove from Operations</param>
        </member>
        <member name="P:IO.Swagger.Filters.BasePathFilter.BasePath">
            <summary>
            Gets the BasePath of the Swagger Doc
            </summary>
            <returns>The BasePath of the Swagger Doc</returns>
        </member>
        <member name="M:IO.Swagger.Filters.BasePathFilter.Apply(Microsoft.OpenApi.Models.OpenApiDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
            <summary>
            Apply the filter
            </summary>
            <param name="swaggerDoc">OpenApiDocument</param>
            <param name="context">FilterContext</param>
        </member>
        <member name="T:IO.Swagger.Filters.GeneratePathParamsValidationFilter">
            <summary>
            Path Parameter Validation Rules Filter
            </summary>
        </member>
        <member name="M:IO.Swagger.Filters.GeneratePathParamsValidationFilter.Apply(Microsoft.OpenApi.Models.OpenApiOperation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Constructor
            </summary>
            <param name="operation">Operation</param>
            <param name="context">OperationFilterContext</param>
        </member>
        <member name="T:IO.Swagger.Models.AuthToken">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.AuthToken.Token">
            <summary>
            Gets or Sets Token
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.AuthToken.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.AuthToken.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.AuthToken.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.AuthToken.Equals(IO.Swagger.Models.AuthToken)">
            <summary>
            Returns true if AuthToken instances are equal
            </summary>
            <param name="other">Instance of AuthToken to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.AuthToken.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.CalculationRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.CalculationRequest.Operation">
            <summary>
            Gets or Sets Operation
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.CalculationRequest.Operand1">
            <summary>
            Gets or Sets Operand1
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.CalculationRequest.Operand2">
            <summary>
            Gets or Sets Operand2
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.CalculationRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.CalculationRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.CalculationRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.CalculationRequest.Equals(IO.Swagger.Models.CalculationRequest)">
            <summary>
            Returns true if CalculationRequest instances are equal
            </summary>
            <param name="other">Instance of CalculationRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.CalculationRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.CalculationResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.CalculationResult.Result">
            <summary>
            Gets or Sets Result
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.CalculationResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.CalculationResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.CalculationResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.CalculationResult.Equals(IO.Swagger.Models.CalculationResult)">
            <summary>
            Returns true if CalculationResult instances are equal
            </summary>
            <param name="other">Instance of CalculationResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.CalculationResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.ErrorResponse">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.ErrorResponse.Error">
            <summary>
            Error message
            </summary>
            <value>Error message</value>
        </member>
        <member name="M:IO.Swagger.Models.ErrorResponse.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.ErrorResponse.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.ErrorResponse.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.ErrorResponse.Equals(IO.Swagger.Models.ErrorResponse)">
            <summary>
            Returns true if ErrorResponse instances are equal
            </summary>
            <param name="other">Instance of ErrorResponse to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.ErrorResponse.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Models.OperationEnum">
            <summary>
            Gets or Sets OperationEnum
            </summary>
        </member>
        <member name="F:IO.Swagger.Models.OperationEnum.AddEnum">
            <summary>
            Enum AddEnum for add
            </summary>
        </member>
        <member name="F:IO.Swagger.Models.OperationEnum.SubtractEnum">
            <summary>
            Enum SubtractEnum for subtract
            </summary>
        </member>
        <member name="F:IO.Swagger.Models.OperationEnum.MultiplyEnum">
            <summary>
            Enum MultiplyEnum for multiply
            </summary>
        </member>
        <member name="F:IO.Swagger.Models.OperationEnum.DivideEnum">
            <summary>
            Enum DivideEnum for divide
            </summary>
        </member>
        <member name="T:IO.Swagger.Models.User">
            <summary>
            
            </summary>
        </member>
        <member name="P:IO.Swagger.Models.User.Email">
            <summary>
            Gets or Sets Email
            </summary>
        </member>
        <member name="M:IO.Swagger.Models.User.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.User.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:IO.Swagger.Models.User.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.User.Equals(IO.Swagger.Models.User)">
            <summary>
            Returns true if User instances are equal
            </summary>
            <param name="other">Instance of User to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:IO.Swagger.Models.User.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:IO.Swagger.Program">
            <summary>
            Program
            </summary>
        </member>
        <member name="M:IO.Swagger.Program.Main(System.String[])">
            <summary>
            Main
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:IO.Swagger.Program.CreateWebHostBuilder(System.String[])">
            <summary>
            Create the web host builder.
            </summary>
            <param name="args"></param>
            <returns>IWebHostBuilder</returns>
        </member>
        <member name="T:IO.Swagger.Repository.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:IO.Swagger.Repository.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:IO.Swagger.Repository.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:IO.Swagger.Repository.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:IO.Swagger.Security.BearerAuthenticationHandler">
            <summary>
            class to handle bearer authentication.
            </summary>
        </member>
        <member name="F:IO.Swagger.Security.BearerAuthenticationHandler.SchemeName">
            <summary>
            scheme name for authentication handler.
            </summary>
        </member>
        <member name="M:IO.Swagger.Security.BearerAuthenticationHandler.HandleAuthenticateAsync">
            <summary>
            verify that require authorization header exists.
            </summary>
        </member>
        <member name="T:IO.Swagger.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:IO.Swagger.Startup.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="env"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:IO.Swagger.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:IO.Swagger.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="loggerFactory"></param>
        </member>
    </members>
</doc>
